export declare type JSONData = unknown;
export declare type JSONObject = Record<string, JSONData>;
export declare const digitsAndLetters: string;
export declare const emailDomainRegexp: RegExp;
export declare function isValidEmailAddress(s: string): boolean;
export declare const MaxPinLifeMins = 15;
export declare const disableBrowserAutocompleteToken = "browsers-should-never-autocomplete-this";
export declare function checkBoolean(x: unknown): boolean;
export declare function checkString(x: unknown): string;
export declare function checkNumber(x: unknown): number;
export declare function isArray<T, U>(x: readonly T[] | U): x is readonly T[];
export declare function isArray<T, U>(x: T[] | U): x is T[];
export declare function checkArray<T, U>(x: T[] | U, checkItem?: (item: unknown) => T): T[];
export declare function proveType<T>(_val: T): void;
export declare function proveNever<T>(_never: never, _message: string, result: T): never;
export declare function panic(message?: string): never;
export declare function assert(fact: boolean, message?: string): asserts fact;
export declare function assertNever(_never: never): never;
export declare function defined<T>(v: T | undefined, reason?: string): T;
export declare function nonNull<T>(v: T | null): T;
export declare function isUndefinedish<T>(v: T | null | undefined): v is null | undefined;
export declare function isEmptyOrUndefined(v: string | undefined): v is undefined;
export declare function isEmptyOrUndefinedish(v: string | undefined | null): boolean;
export declare function nullToUndefined<T>(v: T | null): T | undefined;
export declare function definedMapWithDefault<T, U>(v: T | undefined, defaultValue: U, f: (v: T) => U): U;
export declare function definedishMapWithDefault<T, U>(v: T | null | undefined, defaultValue: U, f: (v: T) => U): U;
export declare function truthify(x: unknown): boolean;
export declare function fillArray<T>(length: number, value: T): T[];
export declare function dontAwait(p: Promise<unknown>): void;
export declare function removeArrayItem<T>(arr: ReadonlyArray<T>, index: number): T[];
export declare function maybe<T>(fn: () => T, defaultValue: T): T;
//# sourceMappingURL=support.d.ts.map