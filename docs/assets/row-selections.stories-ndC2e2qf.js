import{j as e,a}from"./marked.esm-dbrxtycE.js";import"./index-BMVQvedj.js";import{D as p}from"./data-editor-all-BToYTlHW.js";import{B as d,D as m,P as t,u as w,d as k}from"./utils-4YxR0oem.js";import{S as u}from"./story-utils-K2EZnGjM.js";import"./iframe-lW6lBOu1.js";import"../sb-preview/runtime.js";import"./image-window-loader-bkTluTgi.js";import"./throttle-7EuXLZa7.js";import"./_baseIteratee-WTHxv43n.js";import"./flatten-qRvRBp6y.js";import"./scrolling-data-grid-iY4OluwF.js";import"./index-PWBWJyi_.js";import"./index.esm-Ejw8GwRl.js";import"./index-wocATsGp.js";const j={title:"Glide-Data-Grid/DataEditor Demos",decorators:[o=>e(u,{children:e(d,{title:"Row selections",description:a(m,{children:["You can enable row selections by setting ",e(t,{children:"rowSelect"})," prop to"," ",e(t,{children:"multi"})," for multi-selection or ",e(t,{children:"single"})," for single-selection. The row marker behavior and appearance can be controlled via the"," ",e(t,{children:"rowMarkers"})," prop."]}),children:e(o,{})})})]},r=o=>{const{cols:c,getCellContent:i}=w(30);return e(p,{...k,rowSelect:o.rowSelect,rowSelectionMode:o.rowSelectionMode,getCellContent:i,rowMarkers:{kind:o.rowMarkersKind,checkboxStyle:o.rowMarkersCheckboxStyle},columns:c,rows:400})};r.args={rowSelect:"single",rowSelectionMode:"auto",rowMarkersKind:"checkbox-visible",rowMarkersCheckboxStyle:"circle"};r.argTypes={rowSelect:{control:{type:"select"},options:["none","single","multi"]},rowSelectionMode:{control:{type:"select"},options:["auto","multi"]},rowMarkersKind:{control:{type:"select"},options:["both","checkbox","number","none","clickable-number","checkbox-visible"]},rowMarkersCheckboxStyle:{control:{type:"select"},options:["square","circle"]}};var n,s,l;r.parameters={...r.parameters,docs:{...(n=r.parameters)==null?void 0:n.docs,source:{originalSource:`p => {
  const {
    cols,
    getCellContent
  } = useMockDataGenerator(30);
  return <DataEditor {...defaultProps} rowSelect={p.rowSelect} rowSelectionMode={p.rowSelectionMode} getCellContent={getCellContent} rowMarkers={{
    kind: p.rowMarkersKind,
    checkboxStyle: p.rowMarkersCheckboxStyle
  }} columns={cols} rows={400} />;
}`,...(l=(s=r.parameters)==null?void 0:s.docs)==null?void 0:l.source}}};const R=["RowSelections"];export{r as RowSelections,R as __namedExportsOrder,j as default};
