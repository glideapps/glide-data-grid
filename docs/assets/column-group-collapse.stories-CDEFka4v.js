import{R as e}from"./iframe-Cq2XwzQG.js";import{D as h}from"./data-editor-all-D1hvqgCa.js";import{B as E,D as G,P as D,M as H,u as M,d as b}from"./utils-DXyvUh4P.js";import{C as k}from"./image-window-loader-Dki_Eadk.js";import{S}from"./story-utils-DDO4w2I3.js";import"./throttle-BMnevX76.js";import"./flatten-DU0DyfAv.js";import"./scrolling-data-grid-BxxzxFU_.js";import"./marked.esm-B228vmBx.js";import"./index-D_kXk1yT.js";import"./index.esm-DzhhbikV.js";import"./index-BvhnotYc.js";const N={title:"Glide-Data-Grid/DataEditor Demos",decorators:[r=>e.createElement(S,null,e.createElement(E,{title:"Group collapse",description:e.createElement(e.Fragment,null,e.createElement(G,null,"Through clever usage of ",e.createElement(D,null,"onGroupHeaderClicked")," you can implement group collapsing. This is a very basic version however it is possible to go much further."),e.createElement(H,null,"Cells under a certain size will not attempt to render to save some frames."))},e.createElement(r,null)))]};function w(r){const[o,a]=e.useState([]),i=e.useCallback((t,l)=>{const n=r[t].group??"";a(u=>u.includes(n)?u.filter(f=>f!==n):[...u,n]),l.preventDefault()},[r]),[d,C]=e.useState(k.empty()),g=e.useCallback((t,l)=>{l!=="group"&&C(t)},[]);return{columns:e.useMemo(()=>r.map(t=>o.includes(t.group??"")?{...t,width:8,hasMenu:!0}:{...t,hasMenu:!0}),[o,r]),onGroupHeaderClicked:i,selectedColumns:d,onSelectedColumnsChange:g}}const s=()=>{const{cols:r,getCellContent:o}=M(100,!0,!0),a=w(r);return e.createElement(h,{...b,...a,getCellContent:o,groupHeaderHeight:24,rows:1e3,rowMarkers:"both"})};var p,m,c;s.parameters={...s.parameters,docs:{...(p=s.parameters)==null?void 0:p.docs,source:{originalSource:`() => {
  const {
    cols,
    getCellContent
  } = useMockDataGenerator(100, true, true);
  const groupHeaderArgs = useCollapsableColumnGroups(cols);
  return <DataEditor {...defaultProps} {...groupHeaderArgs} getCellContent={getCellContent} groupHeaderHeight={24} rows={1000} rowMarkers="both" />;
}`,...(c=(m=s.parameters)==null?void 0:m.docs)==null?void 0:c.source}}};const O=["ColumnGroupCollapse"];export{s as ColumnGroupCollapse,O as __namedExportsOrder,N as default};
