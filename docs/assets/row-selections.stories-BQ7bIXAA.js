import{R as e}from"./iframe-B6SGc2rO.js";import{D as i}from"./data-editor-all-C9_g1Ubb.js";import{B as p,D as m,P as t,u,d as w}from"./utils-C18Rw6G3.js";import{S as d}from"./story-utils-BxP6XtVy.js";import"./image-window-loader-C6btADxh.js";import"./throttle-DiTf4WkO.js";import"./marked.esm-DUXHH2IH.js";import"./flatten-DyO5syz-.js";import"./scrolling-data-grid-DUmfy0vJ.js";import"./index-D_kXk1yT.js";import"./index.esm-CI0qK3ar.js";import"./index-C7mL3qzk.js";const R={title:"Glide-Data-Grid/DataEditor Demos",decorators:[o=>e.createElement(d,null,e.createElement(p,{title:"Row selections",description:e.createElement(m,null,"You can enable row selections by setting ",e.createElement(t,null,"rowSelect")," prop to"," ",e.createElement(t,null,"multi")," for multi-selection or ",e.createElement(t,null,"single")," for single-selection. The row marker behavior and appearance can be controlled via the"," ",e.createElement(t,null,"rowMarkers")," prop.")},e.createElement(o,null)))]},r=o=>{const{cols:s,getCellContent:a}=u(30);return e.createElement(i,{...w,rowSelect:o.rowSelect,rowSelectionMode:o.rowSelectionMode,getCellContent:a,rowMarkers:{kind:o.rowMarkersKind,checkboxStyle:o.rowMarkersCheckboxStyle},columns:s,rows:400})};r.args={rowSelect:"single",rowSelectionMode:"auto",rowMarkersKind:"checkbox-visible",rowMarkersCheckboxStyle:"circle"};r.argTypes={rowSelect:{control:{type:"select"},options:["none","single","multi"]},rowSelectionMode:{control:{type:"select"},options:["auto","multi"]},rowMarkersKind:{control:{type:"select"},options:["both","checkbox","number","none","clickable-number","checkbox-visible"]},rowMarkersCheckboxStyle:{control:{type:"select"},options:["square","circle"]}};var l,n,c;r.parameters={...r.parameters,docs:{...(l=r.parameters)==null?void 0:l.docs,source:{originalSource:`p => {
  const {
    cols,
    getCellContent
  } = useMockDataGenerator(30);
  return <DataEditor {...defaultProps} rowSelect={p.rowSelect} rowSelectionMode={p.rowSelectionMode} getCellContent={getCellContent} rowMarkers={{
    kind: p.rowMarkersKind,
    checkboxStyle: p.rowMarkersCheckboxStyle
  }} columns={cols} rows={400} />;
}`,...(c=(n=r.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};const v=["RowSelections"];export{r as RowSelections,v as __namedExportsOrder,R as default};
